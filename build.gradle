plugins {
    id 'fabric-loom' version "1.5-SNAPSHOT"
    id 'maven-publish'
}

version = '0.9.0c-1.19.2-fabric'
group = 'com.drmangotea.createindustry' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'createindustry'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
    maven { url = "https://maven.blamejared.com/" } // JEI
    maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
    maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
    maven { url = "https://maven.tterrag.com/" } // Flywheel
    maven { url = 'https://ladysnake.jfrog.io/artifactory/mods' } // I FUCKING HATE CAPABILITERS
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:$minecraft_version+build.$quilt_version:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-$minecraft_version:$parchment_version@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

    // Create - dependencies are added transitively
    modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")

    //JEI
    compileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    runtimeOnly(compileOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"))

    // Development QOL
    modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")
    modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")
}

processResources {
    // require dependencies to be the version compiled against or newer
//    Map<String, String> properties = Map.of(
//            "version", version,
//            "fabric_loader_version", fabric_loader_version,
//            "fabric_api_version", fabric_api_version,
//            "create_version", create_version,
//            "minecraft_version", minecraft_version
//    )

    inputs.properties(properties)

    filesMatching("fabric.mod.json") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

loom {
        runs {

            data {
                environment = "data"

                defaultMainClass = 'com.drmangotea.createindustry.CreateTFMG.java'
                //property 'forge.logging.markers', 'REGISTRIES'
                //property 'forge.logging.console.level', 'debug'
                programArgs '--mod', 'createindustry', '--all', '--output', 'src/generated/resources/', '--existing', 'src/main/resources/'
            }

//            mixin {
//                defaultRefmapName = 'mixins.createindustry.refmap.json'
//                useRefmap = true
//                remap = true
//            }
    }
}
//minecraft {
//
//
//    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
//

//}
//
//// Include resources generated by data generators.
//sourceSets.main.resources { srcDir 'src/generated/resources' }
